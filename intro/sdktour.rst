Directory Tour - TODO
***********************

Introduction
===============

After you have installed Torque 3D and experimented with it, we recommend that you familiarize yourself with the directory structure of the Torque 3D SDK.

The stock Torque 3D installation includes dozens of folders and thousands of files. It is easy to be overwhelmed at first, but if you spend a little time to browse through the directory hierarchy while reading along with the Directory and Torque 3D Project Tours below, you'll find that everything is organized in a straightforward and intuitive manner. Following the tours, we have also included a brief description of the file types you will encounter while using Torque 3D.

SDK Tour - TODO
================
**TODO**

Torque 3D Project Tour - TODO
===============================

Modules and projects created share a common directory structure. Folders are named and organized in such a way that it is easy to locate files based on their type and functionality. The following table describes the purpose of the main folders found in each Torque 3D project.

**TODO**

File Descriptions
===================

* **.bat** - Windows batch files that contain OS commands which can be run to perform tasks. Mostly used in the Torque environment for deleting multiple files at once (.dso, prefs, .uft, etc).
* **.c / .cpp** - Source code files. These contain the C and C++ language programming instructions which are compiled by developer tools to create the game executable (.exe).
* **.cs** - TorqueScript files contain most of your programmed game logic and processing using the TorqueScript language.
* **..command** - The Mac equivalent of a .bat file.
* **console.log** - This file is generated by your game whenever you run it. A lot of information about the critical events that occur during your game are written and saved here.
* **.dae** - COLLADA files which store model information (geometry, textures, nodes) before Torque 3D converts them to its proprietary DTS format.
* **.dml** - *(Deprecated)* Configuration files used for combining environmental textures, mostly used by precipitation and clouds.
* **.dso** - TorqueScript (.cs) files that have been compiled into an encrypted format. DSO files are more secure than the original uncompiled .cs files that they are created from.
* **.dsq** - *(still supported, replaced with .dae)* Proprietary files which store animation information in the format expected by Torque. A .dsq is used in conjunction with .dts files.
* **.dts** - Proprietary file which stores model information (geometry, textures, nodes) in the format expected by Torque. A .dts is loaded directly into Torque to render 3D models, such as players, items, weapons, and vehicles.
* **.dll** - Dynamically Linked Library files (DLL) contain code that can be called at runtime by application binary files (.exe and .app) instead of being compiled directly into the binary file itself. This is useful for common libraries, such as OpenGL, OpenAL, Havok, etc.
* **.exe / .app** - Binary files created by developer tools during the compiling process. Most commonly used to launch your game, a Torque tool, or any other normal computer application.
* **.glsl** - Contains the configuration information that describes an OpenGL graphics shader.
* **.gui** - Contains the data used to create a Graphical User Interface (GUI). These files are created using TorqueScript but the special .gui extension allows the GUI Editor to open them for visual modification.
* **.h** - Header files contain declarations written in the C and C++ languages for classes, structs, variables, and other programming elements, which are compiled by the engine in conjunction with .c and .cpp files to create binary files.
* **.hlsl** - High Level Shader Language files. Holds the configuration information that describes an MS Windows specific graphics shader.
* **.mis** - Contains descriptions of the terrain, models, lighting, and environment, and other objects which make up the missions in your game in the format expected by Torque.
* **.ogg** - Contains audio data in the Ogg Vorbis format for playing sounds and music in your games.
* **.png / .jpg / .gif / .dds** - Raw image files.
* **.ter** - Contains terrain data in a format which is understood by, and can be loaded directly into, Torque 3D.
* **.torsion** - Contains project configuration information which is understood by, and can be loaded into, Torsion which can be used to edit Torque .cs and .gui files. These are Windows only files.
* **.uft** - These files contain pre-cached font information.
* **.wav** - Contains audio data in the Waveform format for playing sounds and music in your games.

Conclusion
=============

Understanding the Torque 3D folder and file structure will allow you to easily locate the files you need to work on during the development of your games.

